-- 사용자 테이블 (User Table) - 학년 추가
CREATE TABLE User (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,  -- 암호화된 비밀번호 저장을 권장합니다.
    email VARCHAR(100) NOT NULL UNIQUE,
    role ENUM('Developer', 'Designer', 'Planner') NOT NULL,  -- 역할
    university VARCHAR(100),  -- 대학교 정보
    grade ENUM('1', '2', '3', '4', 'Graduate') NOT NULL,  -- 학년 정보 추가 (1, 2, 3, 4, 대학원생)
    profile_info TEXT,  -- 사용자 정보 (선택 사항)
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


-- 프로젝트 테이블 (Project Table)
CREATE TABLE Project (
    project_id INT AUTO_INCREMENT PRIMARY KEY,
    project_name VARCHAR(100) NOT NULL,
    description TEXT,
    required_developers INT DEFAULT 0,  -- 필요한 개발자 수
    required_designers INT DEFAULT 0,   -- 필요한 디자이너 수
    required_planners INT DEFAULT 0,    -- 필요한 기획자 수
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 기술 스택 테이블 (Tech Stack Table) - 카테고리 추가
CREATE TABLE TechStack (
    stack_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(50) NOT NULL UNIQUE,
    category ENUM('Frontend', 'Backend', 'Design', 'DevOps', 'Data Science', 'Other') NOT NULL  -- 카테고리 필드 추가
);

-- 프로젝트와 기술 스택을 연결하는 테이블 (Project_Stack Table)
CREATE TABLE Project_Stack (
    project_id INT NOT NULL,
    stack_id INT NOT NULL,
    PRIMARY KEY (project_id, stack_id),
    FOREIGN KEY (project_id) REFERENCES Project(project_id) ON DELETE CASCADE,
    FOREIGN KEY (stack_id) REFERENCES TechStack(stack_id) ON DELETE CASCADE
);

-- 지원 테이블 (Applications Table)
CREATE TABLE Application (
    application_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    project_id INT NOT NULL,
    role ENUM('Developer', 'Designer', 'Planner') NOT NULL,  -- 지원자의 역할
    status ENUM('Pending', 'Accepted', 'Rejected') DEFAULT 'Pending',
    applied_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES User(user_id) ON DELETE CASCADE,
    FOREIGN KEY (project_id) REFERENCES Project(project_id) ON DELETE CASCADE
);

-- 샘플 데이터 삽입 (예시)
INSERT INTO User (username, password, email, role, university, grade) VALUES 
('user1', 'hashed_password1', 'user1@example.com', 'Developer', '연세대학교', '3'),
('user2', 'hashed_password2', 'user2@example.com', 'Designer', '서울대학교', 'Graduate');

INSERT INTO TechStack (name, category) VALUES 
('React', 'Frontend'), 
('Node.js', 'Backend'), 
('Python', 'Backend'), 
('Figma', 'Design'),
('UI/UX', 'Design');

INSERT INTO Project (user_id, title, description) VALUES 
(1, '졸업 작품 팀원 구함', 'IoT 기반 스마트홈 시스템 개발'),
(2, '교내 해커톤 팀원 모집', 'AI 기반 학습 플랫폼 개발 프로젝트입니다.');

INSERT INTO Project_Stack (project_id, stack_id) VALUES 
(1, 2), (1, 3), (2, 1), (2, 3), (2, 4);

INSERT INTO Application (user_id, project_id, role, status) VALUES
(1, 1, 'Developer', 'Pending'),
(2, 1, 'Designer', 'Pending');